# Ce fichier est destiné à une Ender 3 Neo (v1) modifiée avec un extrudeur Sprite Pro,
# un CR Touch Creality et une carte Manta M8P (v2.0) BigTreeTech Klipper et Mainsail sont
# installés sur un CB2 de BigTreeTech 2GB RAM.

# Cette configuration utilise KAMP.

# Les fichiers pour le nivellement adaptatif de Klipper (KAMP) et la ligne de purge sont inclus.
# Ajoutez-les dans le dossier où vous exécutez Klipper.
# PLUS D'INFOS SUR LE GITHUB DE KAMP
# https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging

# Ce fichier contient les correspondances de broches courantes pour la BIGTREETECH Manta M8P V2.0.
# Pour utiliser cette configuration, le firmware doit être compilé pour le
# STM32H723 avec un "bootloader de 128KiB", un "cristal de 25 MHz",
# ainsi que "USB (sur PA11/PA12)", "CAN bus (sur PD0/PD1)" ou Série (sur USART1 PA10/PA9).

# Remplacez les scripts de démarrage et de fin de G-code personnalisés du slicer par :

# ↓↓↓↓↓↓↓↓↓↓↓ "Modele ci dessous pour OrcaSlicer" ↓↓↓↓↓↓↓↓↓↓↓↓↓↓

# START_PRINT BED_TEMP={material_bed_temperature_layer_0} EXTRUDER_TEMP={material_print_temperature_layer_0}
# et END_PRINT.

#====================================================================
# INCLUDE CONFIG BACKUPS       
#====================================================================

[include config_backup.cfg]     ; Macros Sauvegarde pour GitHub

#====================================================================
# INCLUDE USER SETTINGS
#====================================================================

[include user_settings.cfg]     ; Macros personnalisées pour l'utilisateur

#====================================================================
# INCLUDE MAINSAIL
#====================================================================

[include mainsail.cfg]

#====================================================================
# INCLUDE MACROS
#====================================================================

[include macros.cfg]

#====================================================================
# INCLUDE TIMELAPSE
#====================================================================

[include timelapse.cfg]

#====================================================================
# VIRTUAL SD CARD
#====================================================================

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes

#====================================================================
# INCLUDE KAMP - Klipper Adaptive Meshing Purging
#====================================================================

# Si vous utilisiez des fichiers plus anciens et obteniez des erreurs, vous devrez peut-être
# changer le nom du fichier de Adaptive_Mesh.cfg en Adaptive_Meshing.cfg.

[include Adaptive_Meshing.cfg]
[include Line_Purge.cfg]

#  *** IMPORTANT ***
# Vous devrez également vous assurer que ce qui suit est défini dans moonraker.conf.
# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
#[file_manager]
#enable_object_processing: True

#====================================================================
# EXCLUDE OBJECTS
#====================================================================

# Le module [exclude_object] permet à Klipper d'exclure des objets
# pendant qu'une impression est en cours. 

[exclude_object]

#====================================================================
# GCODE ARCS
#====================================================================
# Le module [gcode_arcs] dans Klipper permet de gérer 
# les arcs dans les commandes G-code

[gcode_arcs]
resolution: 0.1

#====================================================================
# FORCE MOVE
#====================================================================
# Le module [force_move] dans Klipper permet d'activer un déplacement forcé de la tête d'impression, 
# même si la machine est en pause ou qu'il y a des conditions empêchant normalement le déplacement. 
# Cela peut être utile pour des déplacements d'urgence ou pour contourner des limitations pendant l'impression.

[force_move]
enable_force_move : true

#====================================================================
# PRINT STATS
#====================================================================
# Le module [print_stats] dans Klipper est utilisé pour afficher des 
# statistiques détaillées sur l'impression en cours.

[print_stats]

#====================================================================
# GCODE MOVE
#====================================================================
# Le module [gcode_move] dans Klipper permet de personnaliser et de contrôler les mouvements de l'imprimante via des commandes G-code. 
# Il permet d'ajuster certains paramètres de mouvement tels que la vitesse, l'accélération, 
# ou encore la gestion des déplacements pendant l'impression.

# Cela permet, par exemple, de configurer des comportements spécifiques pour les mouvements d'impression, 
# les déplacements rapides (travel moves), ou d'autres ajustements pour améliorer 
# la qualité et la vitesse de l'impression.

[gcode_move]

#====================================================================
# Respond Messages
#====================================================================

[respond]
#default_type: echo
#   Définit le préfixe par défaut de la sortie "M118" et "RESPOND"
#   sur l'un des suivants :
#       echo: "echo: " (C'est la valeur par défaut.)
#       command: "// "
#       error: "!! "
default_prefix: 
#   Définit directement le préfixe par défaut. S'il est présent, 
#   cette valeur remplacera le "default_type".


#====================================================================
# MCU
#====================================================================

[mcu]
canbus_uuid: 035817d7da88
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
#restart_method: command

#====================================================================
# BigTreeTech Temperature Display for Mainsail
#====================================================================

[temperature_sensor Motherboard]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#====================================================================
# PRINTER
#====================================================================

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

#====================================================================
# STEPPER X
#====================================================================

# Motor1 
[stepper_x]
step_pin: PE6
dir_pin: PE5
enable_pin: !PC14
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_min: -6                # La position minimale reste à 0, car ton capteur est décalé
position_endstop: -6            # La position du fin de course (0 pour un capteur en position d'origine)
position_max: 240
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: false

#====================================================================
# STEPPER Y
#====================================================================

# Motor2
[stepper_y]
step_pin: PE2
dir_pin: PE1
enable_pin: !PE4
microsteps: 64
rotation_distance: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: -20               # La position minimale reste à 0, car ton capteur est décalé
position_endstop: -20           # La position du fin de course (0 pour un capteur en position d'origine)
position_max: 240
homing_speed: 50
homing_retract_dist: 0
homing_positive_dir: false

#====================================================================
# STEPPER Z
#====================================================================

# Motor3
[stepper_z]
step_pin: PB8
dir_pin: !PB7
enable_pin: !PE0
microsteps: 64
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -5 
homing_speed: 8
homing_retract_dist: 3
second_homing_speed: 3

#====================================================================
# STEPPER Z1
#====================================================================

## Motor4
[stepper_z1]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB6
microsteps: 64
rotation_distance: 8

#====================================================================
# TMC2209 STEPPER X
#====================================================================

## Motor1
[tmc2209 stepper_x]
uart_pin: PC13
diag_pin: PF4 
run_current: 0.800
stealthchop_threshold: 999999
driver_SGTHRS: 110

#====================================================================
# TMC2209 STEPPER Y
#====================================================================

## Motor2
[tmc2209 stepper_y]
uart_pin: PE3
diag_pin: PF3
run_current: 0.800
stealthchop_threshold: 999999
driver_SGTHRS: 100

#====================================================================
# TMC2209 STEPPER Z
#====================================================================

## Motor3
[tmc2209 stepper_z]
uart_pin: PB9
diag_pin: PF2
run_current: 0.650
stealthchop_threshold: 999999
driver_SGTHRS: 100

#====================================================================
# TMC2209 STEPPER Z1
#====================================================================

## Motor4
[tmc2209 stepper_z1]
uart_pin: PB5
diag_pin: PF1
run_current: 0.650
stealthchop_threshold: 999999
driver_SGTHRS: 100

#====================================================================
# TMC2209 STEPPER EXTRUDER
#====================================================================

## Motor5
[tmc2209 extruder]
uart_pin: PG14
interpolate: false
run_current: 0.650
stealthchop_threshold: 999999

#====================================================================
# FANS
#====================================================================

# Fan0
[fan]
pin: PF7

# Fan1
[heater_fan fan1]
pin: PF9

#====================================================================
# EXTRUDER
#====================================================================

[extruder]
max_extrude_only_distance: 100.0 # for rotation_distance calibration. Default is 50
step_pin: PG13
dir_pin: !PG12
enable_pin: !PG15
microsteps: 16
gear_ratio: 3.5:1
rotation_distance: 26.359
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PB0
control: pid
pid_Kp: 23.561
pid_Ki: 1.208
pid_Kd: 114.859
min_temp: 0
max_temp: 300 
max_extrude_cross_section: 5 # For KAMP purge

[verify_heater extruder]
max_error: 30
check_gain_time: 10
hysteresis: 10
heating_gain: 2

#====================================================================
# FILAMENT SENSOR
#====================================================================

[filament_switch_sensor filament_sensor]
switch_pin: PF10

#====================================================================
# PRESSURE ADVANCE
#====================================================================

# It is recommended to calibrate your own pressure advance.
# See https://www.klipper3d.org/Pressure_Advance.html

#pressure_advance: .0465 # Overture PLA White
#pressure_advance: .0369 # Polymaker PLA Pro Teal
#pressure_advance_smooth_time: 0.04

#====================================================================
# PAUSE RESUME
#====================================================================

[pause_resume]
recover_velocity: 25

#====================================================================
# IDLE TIMEOUT 
#====================================================================

# [idle_timeout] allows Klipper to automatically shut down
# the printer after a period of inactivity, default is 5 minutes. 
# This can be useful for when needing to extend time between filament
# swaps or pauses. I use for HueForge. 

# Time-out is in seconds, 30 minutes for safety reasons adjust
# at you own risk. 

# [idle_timeout]

# gcode:
#   {% if printer.pause_resume.is_paused %}
#     M118 Idle timeout while paused, turning off hotend
#     SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
#   {% else %}
#     M118 Idle timeout
#     TURN_OFF_HEATERS
#     M84
#   {% endif %}
# timeout: 1800 

#====================================================================
# BED
#====================================================================

[heater_bed]
heater_pin: PF5
sensor_pin: PB1 # TB 
sensor_type: EPCOS 100K B57560G104F
control: pid
pid_kp: 70.405
pid_ki: 1.229
pid_kd: 1008.553
min_temp: 0
max_temp: 130

[verify_heater heater_bed]
max_error: 120
check_gain_time: 120
hysteresis: 10
heating_gain: 2

#====================================================================
# BL TOUCH
#====================================================================

[bltouch]
sensor_pin: PD13
control_pin: PD12
x_offset: -33
y_offset: -41
#z_offset: 0
probe_with_touch_mode: true
stow_on_each_sample: false

#====================================================================
# SAFE Z HOME
#====================================================================

[safe_z_home]
home_xy_position: 147, 156
speed: 75
z_hop: 10
z_hop_speed: 5

#====================================================================
# SCREW ADJUSTMENT
#====================================================================

[bed_screws]
screw1: 25, 205 # Using rear left to take measurements as harder to reach
screw1_name: Arrière Gauche

screw2: 201, 217
screw2_name: Arrière Droit

screw3: 200, 33
screw3_name: Avant Gauche

screw4: 30, 33
screw4_name: Avant Droit

[screws_tilt_adjust]              # Gives the palpation values on the bed and indicates the changes to be made.
screw_thread: CW-M4
speed: 100
screw1: 233, 220 
screw1_name: Ar. Droite                       ################################
screw2: 63, 220                               # 2                          1 #
screw2_name: Ar. Gauche                       #                              #
screw3: 63, 88                                #                              #
screw3_name: Av. Gauche                       #                              #
screw4: 233, 88                               # 3                          4 #
screw4_name: Av. Droite                       ################################
screw_thread: CW-M4 # Use CW for Clockwise and CCW for Counter Clockwise

#====================================================================
# BED MESH PARAMETERS
#====================================================================

[bed_mesh]
speed: 120
horizontal_move_z: 8
mesh_min: 15,15
mesh_max: 207,179
probe_count: 5,5
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

#====================================================================
# INPUT SHAPER
#====================================================================

# Klipper supports Input Shaping - a technique that can be used to
# reduce ringing (also known as echoing, ghosting or rippling) in
# prints. Ringing is a surface printing defect when, typically,
# elements like edges repeat themselves on a printed surface as a
# subtle 'echo':

# Every printer is different and the ringing frequency depends on
# the printer's mechanical properties. The ringing frequency can be
# measured by printing a simple test object and measuring the
# distance between the echoes. The ringing frequency is typically
# between 50 and 100 Hz.

# https://www.klipper3d.org/Resonance_Compensation.html

# Uncomment the following lines to enable input shaping. The
# shaper_freq_x and shaper_freq_y parameters should be set to the
# ringing frequency of the printer. 

# MANUAL SETUP
# [input_shaper]
# shaper_freq_x: 54.85
# shaper_type_x: ei
# shaper_freq_y: 57.52
# shaper_type_y: mzv

# # ADXL345 SETUP
# [input_shaper]
# shaper_freq_x: 68.8
# shaper_type_x: mzv
# shaper_freq_y: 44.4
# shaper_type_y: mzv

# Set up your accelerometer using the following link https://www.klipper3d.org/Measuring_Resonances.html

# # [mcu rpi]
# # serial: /tmp/klipper_host_mcu

# [adxl345]
# cs_pin: rpi:None

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#     117, 117, 20  # home probe point

#====================================================================
# SAVE_CONFIG  *** IMPORTANT ***
#====================================================================

# To avoid any potential errors, it's best to include the
# SAVE_CONFIG information provided below. 
# Additionally, it's highly recommended that you tune your own PID
# values and set the z-offset before starting any printing tasks.
# This will help ensure that your machine performs optimally and 
# that you achieve the best possible results.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 3.325
